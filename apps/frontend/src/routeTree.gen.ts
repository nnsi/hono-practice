/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as SettingRouteImport } from './routes/setting'
import { Route as NewGoalRouteImport } from './routes/new-goal'
import { Route as GoalRouteImport } from './routes/goal'
import { Route as DailyRouteImport } from './routes/daily'
import { Route as IndexRouteImport } from './routes/index'
import { Route as ActivityStatsRouteImport } from './routes/activity/stats'

const SettingRoute = SettingRouteImport.update({
  id: '/setting',
  path: '/setting',
  getParentRoute: () => rootRouteImport,
} as any)
const NewGoalRoute = NewGoalRouteImport.update({
  id: '/new-goal',
  path: '/new-goal',
  getParentRoute: () => rootRouteImport,
} as any)
const GoalRoute = GoalRouteImport.update({
  id: '/goal',
  path: '/goal',
  getParentRoute: () => rootRouteImport,
} as any)
const DailyRoute = DailyRouteImport.update({
  id: '/daily',
  path: '/daily',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const ActivityStatsRoute = ActivityStatsRouteImport.update({
  id: '/activity/stats',
  path: '/activity/stats',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/daily': typeof DailyRoute
  '/goal': typeof GoalRoute
  '/new-goal': typeof NewGoalRoute
  '/setting': typeof SettingRoute
  '/activity/stats': typeof ActivityStatsRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/daily': typeof DailyRoute
  '/goal': typeof GoalRoute
  '/new-goal': typeof NewGoalRoute
  '/setting': typeof SettingRoute
  '/activity/stats': typeof ActivityStatsRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/daily': typeof DailyRoute
  '/goal': typeof GoalRoute
  '/new-goal': typeof NewGoalRoute
  '/setting': typeof SettingRoute
  '/activity/stats': typeof ActivityStatsRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/daily'
    | '/goal'
    | '/new-goal'
    | '/setting'
    | '/activity/stats'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/daily' | '/goal' | '/new-goal' | '/setting' | '/activity/stats'
  id:
    | '__root__'
    | '/'
    | '/daily'
    | '/goal'
    | '/new-goal'
    | '/setting'
    | '/activity/stats'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  DailyRoute: typeof DailyRoute
  GoalRoute: typeof GoalRoute
  NewGoalRoute: typeof NewGoalRoute
  SettingRoute: typeof SettingRoute
  ActivityStatsRoute: typeof ActivityStatsRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/setting': {
      id: '/setting'
      path: '/setting'
      fullPath: '/setting'
      preLoaderRoute: typeof SettingRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/new-goal': {
      id: '/new-goal'
      path: '/new-goal'
      fullPath: '/new-goal'
      preLoaderRoute: typeof NewGoalRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/goal': {
      id: '/goal'
      path: '/goal'
      fullPath: '/goal'
      preLoaderRoute: typeof GoalRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/daily': {
      id: '/daily'
      path: '/daily'
      fullPath: '/daily'
      preLoaderRoute: typeof DailyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/activity/stats': {
      id: '/activity/stats'
      path: '/activity/stats'
      fullPath: '/activity/stats'
      preLoaderRoute: typeof ActivityStatsRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  DailyRoute: DailyRoute,
  GoalRoute: GoalRoute,
  NewGoalRoute: NewGoalRoute,
  SettingRoute: SettingRoute,
  ActivityStatsRoute: ActivityStatsRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
