name: Deploy Cloudflare

on:
  push:
    branches:
      - master
      - release

jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      deployments: write
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 22

      - name: Install dependencies
        run: npm install

      - name: test
        run: npm run ci-check

      - name: Build (for stg)
        if: github.ref_name == 'master'
        run: npm run build-client-stg

      - name: Build (for release)
        if: github.ref_name == 'release'
        run: npm run build-client

      - name: Build API
        run: npm run build-server

      - name: Migrate Neon DB (stg)
        if: github.ref_name == 'master'
        run: npm run migrate
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL_STG }}

      - name: Migrate Neon DB (prod)
        if: github.ref_name == 'release'
        run: npm run migrate
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL_PROD }}

      - name: Set DATABASE_URL secret in Cloudflare (stg)
        if: github.ref_name == 'master'
        run: |
          echo "${{ secrets.DATABASE_URL_STG }}" | npx wrangler secret put DATABASE_URL --env stg
          echo "${{ secrets.JWT_SECRET }}"       | npx wrangler secret put JWT_SECRET --env stg
          echo "${{ vars.APP_URL_STG }}"         | npx wrangler secret put APP_URL --env stg
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CF_WORKERS_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CF_ACCOUNT_ID }}

      - name: Set DATABASE_URL secret in Cloudflare (prod)
        if: github.ref_name == 'release'
        run: |
          echo "${{ secrets.DATABASE_URL_PROD }}" | npx wrangler secret put DATABASE_URL --env production
          echo "${{ secrets.JWT_SECRET }}"       | npx wrangler secret put JWT_SECRET --env production
          echo "${{ vars.APP_URL_PROD }}"         | npx wrangler secret put APP_URL --env production
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CF_WORKERS_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CF_ACCOUNT_ID }}

      - name: Deploy to Cloudflare Workers (stg)
        if: github.ref_name == 'master'
        run: npm run deploy:stg
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CF_WORKERS_TOKEN }}
          CF_ACCOUNT_ID: ${{ secrets.CF_ACCOUNT_ID }}

      - name: Deploy to Cloudflare Workers (release)
        if: github.ref_name == 'release'
        run: npm run deploy:prod
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CF_WORKERS_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CF_ACCOUNT_ID }}

      - name: Publish to Cloudflare Pages
        uses: cloudflare/pages-action@1
        with:
          accountId: ${{ secrets.CF_ACCOUNT_ID }}
          apiToken: ${{ secrets.CF_PAGES_TOKEN }}
          projectName: ${{ vars.CF_PAGES_PJ_NAME }}
          directory: ./dist-frontend
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}
